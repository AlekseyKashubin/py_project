(function(){var __webpack_modules__={"./src/index.js":function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nwindow[\'richpanel_messenger_url\'] = "https://messenger.richpanel.com" || 0;\nwindow[\'richpanel_api_url\'] = "https://api.richpanel.com/v3" || 0;\nwindow[\'richpanel_ws_url\'] = "https://ws.richpanel.com" || 0;\nwindow[\'richpanelVersion\'] = "2.0.0.j" || 0;\n\ndocument.currentScript = document.currentScript || function () {\n  var scripts = document.getElementsByTagName(\'script\');\n  return scripts[scripts.length - 1];\n}();\n\ndocument.currentScript.get = function (variable) {\n  if (variable = new RegExp(\'[?&]\' + encodeURIComponent(variable) + \'=([^&]*)\').exec(this.src)) return decodeURIComponent(variable[1]);\n};\n\nvar _appClientId = document.currentScript.get(\'appClientId\');\n\nif (_appClientId) window[\'appClientId\'] = _appClientId;\n\nfunction setupDetect() {\n  (function (e) {\n    Array.prototype.map || (Array.prototype.map = function (e, r) {\n      var a, o, i;\n      if (null == this) throw new TypeError(" this is null or not defined");\n      var n = Object(this),\n          t = n.length >>> 0;\n      if ("function" != typeof e) throw new TypeError(e + " is not a function");\n\n      for (r && (a = r), o = Array(t), i = 0; t > i;) {\n        var l, d;\n        i in n && (l = n[i], d = e.call(a, l, i, n), o[i] = d), i++;\n      }\n\n      return o;\n    });\n\n    var r = e.detect = function () {\n      var e = function e() {},\n          r = {\n        browser_parsers: [{\n          regex: "^(Opera)/(\\\\d+)\\\\.(\\\\d+) \\\\(Nintendo Wii",\n          family_replacement: "Wii",\n          manufacturer: "Nintendo"\n        }, {\n          regex: "(SeaMonkey|Camino)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)",\n          family_replacement: "Camino",\n          other: !0\n        }, {\n          regex: "(Pale[Mm]oon)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?",\n          family_replacement: "Pale Moon (Firefox Variant)",\n          other: !0\n        }, {\n          regex: "(Fennec)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)",\n          family_replacement: "Firefox Mobile"\n        }, {\n          regex: "(Fennec)/(\\\\d+)\\\\.(\\\\d+)(pre)",\n          family_replacment: "Firefox Mobile"\n        }, {\n          regex: "(Fennec)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Firefox Mobile"\n        }, {\n          regex: "Mobile.*(Firefox)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Firefox Mobile"\n        }, {\n          regex: "(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?)",\n          family_replacement: "Firefox ($1)"\n        }, {\n          regex: "(Firefox)/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)",\n          family_replacement: "Firefox Alpha"\n        }, {\n          regex: "(Firefox)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)",\n          family_replacement: "Firefox Beta"\n        }, {\n          regex: "(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)",\n          family_replacement: "Firefox Alpha"\n        }, {\n          regex: "(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)",\n          family_replacement: "Firefox Beta"\n        }, {\n          regex: "(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?",\n          family_replacement: "Firefox ($1)"\n        }, {\n          regex: "(Firefox).*Tablet browser (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "MicroB",\n          tablet: !0\n        }, {\n          regex: "(MozillaDeveloperPreview)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?"\n        }, {\n          regex: "(Flock)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+?)",\n          family_replacement: "Flock",\n          other: !0\n        }, {\n          regex: "(RockMelt)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Rockmelt",\n          other: !0\n        }, {\n          regex: "(Navigator)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Netscape"\n        }, {\n          regex: "(Navigator)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+)",\n          family_replacement: "Netscape"\n        }, {\n          regex: "(Netscape6)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Netscape"\n        }, {\n          regex: "(MyIBrow)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "My Internet Browser",\n          other: !0\n        }, {\n          regex: "(Opera Tablet).*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          family_replacement: "Opera Tablet",\n          tablet: !0\n        }, {\n          regex: "(Opera)/.+Opera Mobi.+Version/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Opera Mobile"\n        }, {\n          regex: "Opera Mobi",\n          family_replacement: "Opera Mobile"\n        }, {\n          regex: "(Opera Mini)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Opera Mini"\n        }, {\n          regex: "(Opera Mini)/att/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Opera Mini"\n        }, {\n          regex: "(Opera)/9.80.*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          family_replacement: "Opera"\n        }, {\n          regex: "(OPR)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          family_replacement: "Opera"\n        }, {\n          regex: "(webOSBrowser)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "webOS"\n        }, {\n          regex: "(webOS)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "webOS"\n        }, {\n          regex: "(wOSBrowser).+TouchPad/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "webOS TouchPad"\n        }, {\n          regex: "(luakit)",\n          family_replacement: "LuaKit",\n          other: !0\n        }, {\n          regex: "(Lightning)/(\\\\d+)\\\\.(\\\\d+)([ab]?\\\\d+[a-z]*)",\n          family_replacement: "Lightning",\n          other: !0\n        }, {\n          regex: "(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?) \\\\(Swiftfox\\\\)",\n          family_replacement: "Swiftfox",\n          other: !0\n        }, {\n          regex: "(Firefox)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)? \\\\(Swiftfox\\\\)",\n          family_replacement: "Swiftfox",\n          other: !0\n        }, {\n          regex: "rekonq",\n          family_replacement: "Rekonq",\n          other: !0\n        }, {\n          regex: "(conkeror|Conkeror)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?",\n          family_replacement: "Conkeror",\n          other: !0\n        }, {\n          regex: "(konqueror)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Konqueror",\n          other: !0\n        }, {\n          regex: "(WeTab)-Browser",\n          family_replacement: "WeTab",\n          other: !0\n        }, {\n          regex: "(Comodo_Dragon)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Comodo Dragon",\n          other: !0\n        }, {\n          regex: "(YottaaMonitor)",\n          family_replacement: "Yottaa Monitor",\n          other: !0\n        }, {\n          regex: "(Kindle)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Kindle"\n        }, {\n          regex: "(Symphony) (\\\\d+).(\\\\d+)",\n          family_replacement: "Symphony",\n          other: !0\n        }, {\n          regex: "Minimo",\n          family_replacement: "Minimo",\n          other: !0\n        }, {\n          regex: "(Edge)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Edge"\n        }, {\n          regex: "(CrMo)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Chrome Mobile"\n        }, {\n          regex: "(CriOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Chrome Mobile iOS"\n        }, {\n          regex: "(Chrome)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+) Mobile",\n          family_replacement: "Chrome Mobile"\n        }, {\n          regex: "(chromeframe)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Chrome Frame"\n        }, {\n          regex: "(UC Browser)(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "UC Browser",\n          other: !0\n        }, {\n          regex: "(SLP Browser)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Tizen Browser",\n          other: !0\n        }, {\n          regex: "(Epiphany)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)",\n          family_replacement: "Epiphany",\n          other: !0\n        }, {\n          regex: "(SE 2\\\\.X) MetaSr (\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Sogou Explorer",\n          other: !0\n        }, {\n          regex: "(Pingdom.com_bot_version_)(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "PingdomBot",\n          other: !0\n        }, {\n          regex: "(facebookexternalhit)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "FacebookBot"\n        }, {\n          regex: "(Twitterbot)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "TwitterBot"\n        }, {\n          regex: "(AdobeAIR|Chromium|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Shiira|Sunrise|Chrome|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iron|Iris|UP\\\\.Browser|Bunjaloo|Google Earth|Raven for Mac)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)"\n        }, {\n          regex: "(Bolt|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|NetNewsWire|Iron|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris)/(\\\\d+)\\\\.(\\\\d+)"\n        }, {\n          regex: "(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)"\n        }, {\n          regex: "(iCab|Lunascape|Opera|Android|Jasmine|Polaris|BREW) (\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?"\n        }, {\n          regex: "(Android) Donut",\n          v2_replacement: "2",\n          v1_replacement: "1"\n        }, {\n          regex: "(Android) Eclair",\n          v2_replacement: "1",\n          v1_replacement: "2"\n        }, {\n          regex: "(Android) Froyo",\n          v2_replacement: "2",\n          v1_replacement: "2"\n        }, {\n          regex: "(Android) Gingerbread",\n          v2_replacement: "3",\n          v1_replacement: "2"\n        }, {\n          regex: "(Android) Honeycomb",\n          v1_replacement: "3"\n        }, {\n          regex: "(IEMobile)[ /](\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "IE Mobile"\n        }, {\n          regex: "(MSIE) (\\\\d+)\\\\.(\\\\d+).*XBLWP7",\n          family_replacement: "IE Large Screen"\n        }, {\n          regex: "(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)"\n        }, {\n          regex: "(Firefox)/(\\\\d+)\\\\.(\\\\d+)(pre|[ab]\\\\d+[a-z]*)?"\n        }, {\n          regex: "(Obigo)InternetBrowser",\n          other: !0\n        }, {\n          regex: "(Obigo)\\\\-Browser",\n          other: !0\n        }, {\n          regex: "(Obigo|OBIGO)[^\\\\d]*(\\\\d+)(?:.(\\\\d+))?",\n          other: !0\n        }, {\n          regex: "(MAXTHON|Maxthon) (\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Maxthon",\n          other: !0\n        }, {\n          regex: "(Maxthon|MyIE2|Uzbl|Shiira)",\n          v1_replacement: "0",\n          other: !0\n        }, {\n          regex: "(PLAYSTATION) (\\\\d+)",\n          family_replacement: "PlayStation",\n          manufacturer: "Sony"\n        }, {\n          regex: "(PlayStation Portable)[^\\\\d]+(\\\\d+).(\\\\d+)",\n          manufacturer: "Sony"\n        }, {\n          regex: "(BrowseX) \\\\((\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(POLARIS)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Polaris",\n          other: !0\n        }, {\n          regex: "(Embider)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Polaris",\n          other: !0\n        }, {\n          regex: "(BonEcho)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Bon Echo",\n          other: !0\n        }, {\n          regex: "(iPod).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Mobile Safari",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPod).*Version/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Mobile Safari",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPod)",\n          family_replacement: "Mobile Safari",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Mobile Safari",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Mobile Safari",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPhone)",\n          family_replacement: "Mobile Safari",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Mobile Safari",\n          tablet: !0,\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Mobile Safari",\n          tablet: !0,\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPad)",\n          family_replacement: "Mobile Safari",\n          tablet: !0,\n          manufacturer: "Apple"\n        }, {\n          regex: "(AvantGo) (\\\\d+).(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(Avant)",\n          v1_replacement: "1",\n          other: !0\n        }, {\n          regex: "^(Nokia)",\n          family_replacement: "Nokia Services (WAP) Browser",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\\\\.(\\\\d+)",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+)",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(BrowserNG)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)",\n          family_replacement: "NokiaBrowser",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(Series60)/5\\\\.0",\n          v2_replacement: "0",\n          v1_replacement: "7",\n          family_replacement: "NokiaBrowser",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(Series60)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Nokia OSS Browser",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(S40OviBrowser)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Nokia Series 40 Ovi Browser",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(Nokia)[EN]?(\\\\d+)",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(PlayBook).+RIM Tablet OS (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Blackberry WebKit",\n          tablet: !0,\n          manufacturer: "Nokia"\n        }, {\n          regex: "(Black[bB]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Blackberry WebKit",\n          manufacturer: "RIM"\n        }, {\n          regex: "(Black[bB]erry)\\\\s?(\\\\d+)",\n          family_replacement: "Blackberry",\n          manufacturer: "RIM"\n        }, {\n          regex: "(OmniWeb)/v(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(Blazer)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Palm Blazer",\n          manufacturer: "Palm"\n        }, {\n          regex: "(Pre)/(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "Palm Pre",\n          manufacturer: "Palm"\n        }, {\n          regex: "(Links) \\\\((\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(QtWeb) Internet Browser/(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?",\n          other: !0,\n          tablet: !0\n        }, {\n          regex: "(AppleWebKit)/(\\\\d+)\\\\.?(\\\\d+)?\\\\+ .* Version/\\\\d+\\\\.\\\\d+.\\\\d+ Safari/",\n          family_replacement: "WebKit Nightly"\n        }, {\n          regex: "(Version)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?.*Safari/",\n          family_replacement: "Safari"\n        }, {\n          regex: "(Safari)/\\\\d+"\n        }, {\n          regex: "(OLPC)/Update(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(OLPC)/Update()\\\\.(\\\\d+)",\n          v1_replacement: "0",\n          other: !0\n        }, {\n          regex: "(SEMC\\\\-Browser)/(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(Teleca)",\n          family_replacement: "Teleca Browser",\n          other: !0\n        }, {\n          regex: "Trident(.*)rv.(\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "IE"\n        }, {\n          regex: "(MSIE) (\\\\d+)\\\\.(\\\\d+)",\n          family_replacement: "IE"\n        }],\n        os_parsers: [{\n          regex: "(Android) (\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?"\n        }, {\n          regex: "(Android)\\\\-(\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?"\n        }, {\n          regex: "(Android) Donut",\n          os_v2_replacement: "2",\n          os_v1_replacement: "1"\n        }, {\n          regex: "(Android) Eclair",\n          os_v2_replacement: "1",\n          os_v1_replacement: "2"\n        }, {\n          regex: "(Android) Froyo",\n          os_v2_replacement: "2",\n          os_v1_replacement: "2"\n        }, {\n          regex: "(Android) Gingerbread",\n          os_v2_replacement: "3",\n          os_v1_replacement: "2"\n        }, {\n          regex: "(Android) Honeycomb",\n          os_v1_replacement: "3"\n        }, {\n          regex: "(Silk-Accelerated=[a-z]{4,5})",\n          os_replacement: "Android"\n        }, {\n          regex: "(Windows Phone 6\\\\.5)"\n        }, {\n          regex: "(Windows (?:NT 5\\\\.2|NT 5\\\\.1))",\n          os_replacement: "Windows XP"\n        }, {\n          regex: "(XBLWP7)",\n          os_replacement: "Windows Phone OS"\n        }, {\n          regex: "(Windows NT 6\\\\.1)",\n          os_replacement: "Windows 7"\n        }, {\n          regex: "(Windows NT 6\\\\.0)",\n          os_replacement: "Windows Vista"\n        }, {\n          regex: "(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\\\.0|Windows Vista|Windows 2000)"\n        }, {\n          regex: "(Windows NT 6\\\\.4|Windows NT 10\\\\.0)",\n          os_replacement: "Windows 10"\n        }, {\n          regex: "(Windows NT 6\\\\.2)",\n          os_replacement: "Windows 8"\n        }, {\n          regex: "(Windows Phone 8)",\n          os_replacement: "Windows Phone 8"\n        }, {\n          regex: "(Windows NT 5\\\\.0)",\n          os_replacement: "Windows 2000"\n        }, {\n          regex: "(Windows Phone OS) (\\\\d+)\\\\.(\\\\d+)"\n        }, {\n          regex: "(Windows ?Mobile)",\n          os_replacement: "Windows Mobile"\n        }, {\n          regex: "(WinNT4.0)",\n          os_replacement: "Windows NT 4.0"\n        }, {\n          regex: "(Win98)",\n          os_replacement: "Windows 98"\n        }, {\n          regex: "(Tizen)/(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(Mac OS X) (\\\\d+)[_.](\\\\d+)(?:[_.](\\\\d+))?",\n          manufacturer: "Apple"\n        }, {\n          regex: "(?:PPC|Intel) (Mac OS X)",\n          manufacturer: "Apple"\n        }, {\n          regex: "(CPU OS|iPhone OS) (\\\\d+)_(\\\\d+)(?:_(\\\\d+))?",\n          os_replacement: "iOS",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPhone|iPad|iPod); Opera",\n          os_replacement: "iOS",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPad); Opera",\n          tablet: !0,\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPhone|iPad|iPod).*Mac OS X.*Version/(\\\\d+)\\\\.(\\\\d+)",\n          os_replacement: "iOS",\n          manufacturer: "Apple"\n        }, {\n          regex: "(CrOS) [a-z0-9_]+ (\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          os_replacement: "Chrome OS"\n        }, {\n          regex: "(Debian)-(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          other: !0\n        }, {\n          regex: "(Linux Mint)(?:/(\\\\d+))?",\n          other: !0\n        }, {\n          regex: "(Mandriva)(?: Linux)?/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          other: !0\n        }, {\n          regex: "(Symbian[Oo][Ss])/(\\\\d+)\\\\.(\\\\d+)",\n          os_replacement: "Symbian OS"\n        }, {\n          regex: "(Symbian/3).+NokiaBrowser/7\\\\.3",\n          os_replacement: "Symbian^3 Anna"\n        }, {\n          regex: "(Symbian/3).+NokiaBrowser/7\\\\.4",\n          os_replacement: "Symbian^3 Belle"\n        }, {\n          regex: "(Symbian/3)",\n          os_replacement: "Symbian^3"\n        }, {\n          regex: "(Series 60|SymbOS|S60)",\n          os_replacement: "Symbian OS"\n        }, {\n          regex: "(MeeGo)",\n          other: !0\n        }, {\n          regex: "Symbian [Oo][Ss]",\n          os_replacement: "Symbian OS"\n        }, {\n          regex: "(Black[Bb]erry)[0-9a-z]+/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          os_replacement: "BlackBerry OS",\n          manufacturer: "RIM"\n        }, {\n          regex: "(Black[Bb]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          os_replacement: "BlackBerry OS",\n          manufacturer: "RIM"\n        }, {\n          regex: "(RIM Tablet OS) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          os_replacement: "BlackBerry Tablet OS",\n          tablet: !0,\n          manufacturer: "RIM"\n        }, {\n          regex: "(Play[Bb]ook)",\n          os_replacement: "BlackBerry Tablet OS",\n          tablet: !0,\n          manufacturer: "RIM"\n        }, {\n          regex: "(Black[Bb]erry)",\n          os_replacement: "Blackberry OS",\n          manufacturer: "RIM"\n        }, {\n          regex: "(webOS|hpwOS)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?",\n          os_replacement: "webOS"\n        }, {\n          regex: "(SUSE|Fedora|Red Hat|PCLinuxOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(SUSE|Fedora|Red Hat|Puppy|PCLinuxOS|CentOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)",\n          other: !0\n        }, {\n          regex: "(Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Red Hat|Slackware)/(\\\\d+)\\\\.(\\\\d+)"\n        }, {\n          regex: "(Windows|OpenBSD|FreeBSD|NetBSD|Ubuntu|Kubuntu|Android|Arch Linux|CentOS|WeTab|Slackware)"\n        }, {\n          regex: "(Linux|BSD)",\n          other: !0\n        }],\n        mobile_os_families: ["Windows Phone 6.5", "Windows CE", "Symbian OS"],\n        device_parsers: [{\n          regex: "HTC ([A-Z][a-z0-9]+) Build",\n          device_replacement: "HTC $1",\n          manufacturer: "HTC"\n        }, {\n          regex: "HTC ([A-Z][a-z0-9 ]+) \\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+",\n          device_replacement: "HTC $1",\n          manufacturer: "HTC"\n        }, {\n          regex: "HTC_Touch_([A-Za-z0-9]+)",\n          device_replacement: "HTC Touch ($1)",\n          manufacturer: "HTC"\n        }, {\n          regex: "USCCHTC(\\\\d+)",\n          device_replacement: "HTC $1 (US Cellular)",\n          manufacturer: "HTC"\n        }, {\n          regex: "Sprint APA(9292)",\n          device_replacement: "HTC $1 (Sprint)",\n          manufacturer: "HTC"\n        }, {\n          regex: "HTC ([A-Za-z0-9]+ [A-Z])",\n          device_replacement: "HTC $1",\n          manufacturer: "HTC"\n        }, {\n          regex: "HTC-([A-Za-z0-9]+)",\n          device_replacement: "HTC $1",\n          manufacturer: "HTC"\n        }, {\n          regex: "HTC_([A-Za-z0-9]+)",\n          device_replacement: "HTC $1",\n          manufacturer: "HTC"\n        }, {\n          regex: "HTC ([A-Za-z0-9]+)",\n          device_replacement: "HTC $1",\n          manufacturer: "HTC"\n        }, {\n          regex: "(ADR[A-Za-z0-9]+)",\n          device_replacement: "HTC $1",\n          manufacturer: "HTC"\n        }, {\n          regex: "(HTC)",\n          manufacturer: "HTC"\n        }, {\n          regex: "SonyEricsson([A-Za-z0-9]+)/",\n          device_replacement: "Ericsson $1",\n          other: !0,\n          manufacturer: "Sony"\n        }, {\n          regex: "Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; WOWMobile (.+) Build"\n        }, {\n          regex: "Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build"\n        }, {\n          regex: "Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\-update1\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build"\n        }, {\n          regex: "Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build"\n        }, {\n          regex: "Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; (.+) Build"\n        }, {\n          regex: "NokiaN([0-9]+)",\n          device_replacement: "Nokia N$1",\n          manufacturer: "Nokia"\n        }, {\n          regex: "Nokia([A-Za-z0-9\\\\v-]+)",\n          device_replacement: "Nokia $1",\n          manufacturer: "Nokia"\n        }, {\n          regex: "NOKIA ([A-Za-z0-9\\\\-]+)",\n          device_replacement: "Nokia $1",\n          manufacturer: "Nokia"\n        }, {\n          regex: "Nokia ([A-Za-z0-9\\\\-]+)",\n          device_replacement: "Nokia $1",\n          manufacturer: "Nokia"\n        }, {\n          regex: "Lumia ([A-Za-z0-9\\\\-]+)",\n          device_replacement: "Lumia $1",\n          manufacturer: "Nokia"\n        }, {\n          regex: "Symbian",\n          device_replacement: "Nokia",\n          manufacturer: "Nokia"\n        }, {\n          regex: "(PlayBook).+RIM Tablet OS",\n          device_replacement: "Blackberry Playbook",\n          tablet: !0,\n          manufacturer: "RIM"\n        }, {\n          regex: "(Black[Bb]erry [0-9]+);",\n          manufacturer: "RIM"\n        }, {\n          regex: "Black[Bb]erry([0-9]+)",\n          device_replacement: "BlackBerry $1",\n          manufacturer: "RIM"\n        }, {\n          regex: "(Pre)/(\\\\d+)\\\\.(\\\\d+)",\n          device_replacement: "Palm Pre",\n          manufacturer: "Palm"\n        }, {\n          regex: "(Pixi)/(\\\\d+)\\\\.(\\\\d+)",\n          device_replacement: "Palm Pixi",\n          manufacturer: "Palm"\n        }, {\n          regex: "(Touchpad)/(\\\\d+)\\\\.(\\\\d+)",\n          device_replacement: "HP Touchpad",\n          manufacturer: "HP"\n        }, {\n          regex: "HPiPAQ([A-Za-z0-9]+)/(\\\\d+).(\\\\d+)",\n          device_replacement: "HP iPAQ $1",\n          manufacturer: "HP"\n        }, {\n          regex: "Palm([A-Za-z0-9]+)",\n          device_replacement: "Palm $1",\n          manufacturer: "Palm"\n        }, {\n          regex: "Treo([A-Za-z0-9]+)",\n          device_replacement: "Palm Treo $1",\n          manufacturer: "Palm"\n        }, {\n          regex: "webOS.*(P160UNA)/(\\\\d+).(\\\\d+)",\n          device_replacement: "HP Veer",\n          manufacturer: "HP"\n        }, {\n          regex: "(Kindle Fire)",\n          manufacturer: "Amazon"\n        }, {\n          regex: "(Kindle)",\n          manufacturer: "Amazon"\n        }, {\n          regex: "(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?",\n          device_replacement: "Kindle Fire",\n          tablet: !0,\n          manufacturer: "Amazon"\n        }, {\n          regex: "(iPad) Simulator;",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPad);",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPod);",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPhone) Simulator;",\n          manufacturer: "Apple"\n        }, {\n          regex: "(iPhone);",\n          manufacturer: "Apple"\n        }, {\n          regex: "Nexus\\\\ ([A-Za-z0-9\\\\-]+)",\n          device_replacement: "Nexus $1"\n        }, {\n          regex: "acer_([A-Za-z0-9]+)_",\n          device_replacement: "Acer $1",\n          manufacturer: "Acer"\n        }, {\n          regex: "acer_([A-Za-z0-9]+)_",\n          device_replacement: "Acer $1",\n          manufacturer: "Acer"\n        }, {\n          regex: "Amoi\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Amoi $1",\n          other: !0,\n          manufacturer: "Amoi"\n        }, {\n          regex: "AMOI\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Amoi $1",\n          other: !0,\n          manufacturer: "Amoi"\n        }, {\n          regex: "Asus\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Asus $1",\n          manufacturer: "Asus"\n        }, {\n          regex: "ASUS\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Asus $1",\n          manufacturer: "Asus"\n        }, {\n          regex: "BIRD\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Bird $1",\n          other: !0\n        }, {\n          regex: "BIRD\\\\.([A-Za-z0-9]+)",\n          device_replacement: "Bird $1",\n          other: !0\n        }, {\n          regex: "BIRD ([A-Za-z0-9]+)",\n          device_replacement: "Bird $1",\n          other: !0\n        }, {\n          regex: "Dell ([A-Za-z0-9]+)",\n          device_replacement: "Dell $1",\n          manufacturer: "Dell"\n        }, {\n          regex: "DoCoMo/2\\\\.0 ([A-Za-z0-9]+)",\n          device_replacement: "DoCoMo $1",\n          other: !0\n        }, {\n          regex: "([A-Za-z0-9]+)\\\\_W\\\\;FOMA",\n          device_replacement: "DoCoMo $1",\n          other: !0\n        }, {\n          regex: "([A-Za-z0-9]+)\\\\;FOMA",\n          device_replacement: "DoCoMo $1",\n          other: !0\n        }, {\n          regex: "vodafone([A-Za-z0-9]+)",\n          device_replacement: "Huawei Vodafone $1",\n          other: !0\n        }, {\n          regex: "i\\\\-mate ([A-Za-z0-9]+)",\n          device_replacement: "i-mate $1",\n          other: !0\n        }, {\n          regex: "Kyocera\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Kyocera $1",\n          other: !0\n        }, {\n          regex: "KWC\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Kyocera $1",\n          other: !0\n        }, {\n          regex: "Lenovo\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Lenovo $1",\n          manufacturer: "Lenovo"\n        }, {\n          regex: "Lenovo\\\\_([A-Za-z0-9]+)",\n          device_replacement: "Lenovo $1",\n          manufacturer: "Levovo"\n        }, {\n          regex: "LG/([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LG-LG([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LGE-LG([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LGE VX([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LG ([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LGE LG\\\\-AX([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LG\\\\-([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LGE\\\\-([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "LG([A-Za-z0-9]+)",\n          device_replacement: "LG $1",\n          manufacturer: "LG"\n        }, {\n          regex: "(KIN)\\\\.One (\\\\d+)\\\\.(\\\\d+)",\n          device_replacement: "Microsoft $1"\n        }, {\n          regex: "(KIN)\\\\.Two (\\\\d+)\\\\.(\\\\d+)",\n          device_replacement: "Microsoft $1"\n        }, {\n          regex: "(Motorola)\\\\-([A-Za-z0-9]+)",\n          manufacturer: "Motorola"\n        }, {\n          regex: "MOTO\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Motorola $1",\n          manufacturer: "Motorola"\n        }, {\n          regex: "MOT\\\\-([A-Za-z0-9]+)",\n          device_replacement: "Motorola $1",\n          manufacturer: "Motorola"\n        }, {\n          regex: "Philips([A-Za-z0-9]+)",\n          device_replacement: "Philips $1",\n          manufacturer: "Philips"\n        }, {\n          regex: "Philips ([A-Za-z0-9]+)",\n          device_replacement: "Philips $1",\n          manufacturer: "Philips"\n        }, {\n          regex: "SAMSUNG-([A-Za-z0-9\\\\-]+)",\n          device_replacement: "Samsung $1",\n          manufacturer: "Samsung"\n        }, {\n          regex: "SAMSUNG\\\\; ([A-Za-z0-9\\\\-]+)",\n          device_replacement: "Samsung $1",\n          manufacturer: "Samsung"\n        }, {\n          regex: "Softbank/1\\\\.0/([A-Za-z0-9]+)",\n          device_replacement: "Softbank $1",\n          other: !0\n        }, {\n          regex: "Softbank/2\\\\.0/([A-Za-z0-9]+)",\n          device_replacement: "Softbank $1",\n          other: !0\n        }, {\n          regex: "(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)",\n          device_replacement: "Generic Smartphone"\n        }, {\n          regex: "^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\\\-|airn|alav|asus|attw|au\\\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\\\\-n|bw\\\\-u|beck|benq|bilb|blac|c55/|cdm\\\\-|chtm|capi|comp|cond|craw|dall|dbte|dc\\\\-s|dica|ds\\\\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\\\-|fly\\\\_|g\\\\-mo|g1 u|g560|gf\\\\-5|grun|gene|go.w|good|grad|hcit|hd\\\\-m|hd\\\\-p|hd\\\\-t|hei\\\\-|hp i|hpip|hs\\\\-c|htc |htc\\\\-|htca|htcg)",\n          device_replacement: "Generic Feature Phone"\n        }, {\n          regex: "^(htcp|htcs|htct|htc\\\\_|haie|hita|huaw|hutc|i\\\\-20|i\\\\-go|i\\\\-ma|i230|iac|iac\\\\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\\\\-|klon|lexi|lg g|lg\\\\-a|lg\\\\-b|lg\\\\-c|lg\\\\-d|lg\\\\-f|lg\\\\-g|lg\\\\-k|lg\\\\-l|lg\\\\-m|lg\\\\-o|lg\\\\-p|lg\\\\-s|lg\\\\-t|lg\\\\-u|lg\\\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\\\-|lge/|lynx|leno|m1\\\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\\\-|nem\\\\-|newg|neon)",\n          device_replacement: "Generic Feature Phone"\n        }, {\n          regex: "^(netf|noki|nzph|o2 x|o2\\\\-x|opwv|owg1|opti|oran|ot\\\\-s|p800|pand|pg\\\\-1|pg\\\\-2|pg\\\\-3|pg\\\\-6|pg\\\\-8|pg\\\\-c|pg13|phil|pn\\\\-2|pt\\\\-g|palm|pana|pire|pock|pose|psio|qa\\\\-a|qc\\\\-2|qc\\\\-3|qc\\\\-5|qc\\\\-7|qc07|qc12|qc21|qc32|qc60|qci\\\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\\\-|scp\\\\-|sdk/|se47|sec\\\\-|sec0|sec1|semc|sgh\\\\-|shar|sie\\\\-|sk\\\\-0|sl45|slid|smb3|smt5|sp01|sph\\\\-|spv |spv\\\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\\\-mo|t218|t250|t600|t610|t618|tcl\\\\-|tdg\\\\-|telm|tim\\\\-|ts70|tsm\\\\-|tsm3|tsm5|tx\\\\-9|tagt)",\n          device_replacement: "Generic Feature Phone"\n        }, {\n          regex: "^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\\\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\\\-|your|zte\\\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\\\-|webc|whit|wmlb|xda\\\\-|xda\\\\_)",\n          device_replacement: "Generic Feature Phone"\n        }, {\n          regex: "(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\\\\-webcrawler|converacrawler|dataparksearch|findlinks)",\n          device_replacement: "Spider"\n        }],\n        mobile_browser_families: ["Firefox Mobile", "Opera Mobile", "Opera Mini", "Mobile Safari", "webOS", "IE Mobile", "Playstation Portable", "Nokia", "Blackberry", "Palm", "Silk", "Android", "Maemo", "Obigo", "Netfront", "AvantGo", "Teleca", "SEMC-Browser", "Bolt", "Iris", "UP.Browser", "Symphony", "Minimo", "Bunjaloo", "Jasmine", "Dolfin", "Polaris", "BREW", "Chrome Mobile", "Chrome Mobile iOS", "UC Browser", "Tizen Browser"]\n      };\n\n      e.parsers = ["device_parsers", "browser_parsers", "os_parsers", "mobile_os_families", "mobile_browser_families"], e.types = ["browser", "os", "device"], e.regexes = r || function () {\n        var r = {};\n        return e.parsers.map(function (e) {\n          r[e] = [];\n        }), r;\n      }(), e.families = function () {\n        var r = {};\n        return e.types.map(function (e) {\n          r[e] = [];\n        }), r;\n      }();\n      var a = Array.prototype,\n          o = (Object.prototype, Function.prototype, a.forEach);\n      a.indexOf;\n\n      var i = function i(e, r) {\n        for (var a = {}, o = 0; r.length > o && !(a = r[o](e)); o++) {\n          ;\n        }\n\n        return a;\n      },\n          n = function n(e, r) {\n        t(e, function (e) {\n          t(r, function (r) {\n            delete e[r];\n          });\n        });\n      },\n          t = forEach = function forEach(e, r, a) {\n        if (null != e) if (o && e.forEach === o) e.forEach(r, a);else if (e.length === +e.length) for (var i = 0, n = e.length; n > i; i++) {\n          r.call(a, e[i], i, e);\n        } else for (var t in e) {\n          _.has(e, t) && r.call(a, e[t], t, e);\n        }\n      },\n          l = function l(e) {\n        return !(!e || e === undefined || null == e);\n      },\n          d = function d(e) {\n        var r = "";\n        return e = e || {}, l(e) && l(e.major) && (r += e.major, l(e.minor) && (r += "." + e.minor, l(e.patch) && (r += "." + e.patch))), r;\n      },\n          c = function c(e) {\n        e = e || {};\n        var r = d(e);\n        return r && (r = " " + r), e && l(e.family) ? e.family + r : "";\n      };\n\n      return e.parse = function (r) {\n        var a = function a(r) {\n          return e.regexes[r + "_parsers"].map(function (e) {\n            function a(r) {\n              var a = r.match(o);\n              if (!a) return null;\n              var t = {};\n              return t.family = (i ? i.replace("$1", a[1]) : a[1]) || "other", t.major = parseInt(n ? n : a[2]) || null, t.minor = a[3] ? parseInt(a[3]) : null, t.patch = a[4] ? parseInt(a[4]) : null, t.tablet = e.tablet, t.man = e.manufacturer || null, t;\n            }\n\n            var o = RegExp(e.regex),\n                i = e[("browser" === r ? "family" : r) + "_replacement"],\n                n = e.major_version_replacement;\n            return a;\n          });\n        },\n            o = function o() {},\n            t = a("browser"),\n            m = a("os"),\n            p = a("device"),\n            s = new o();\n\n        s.source = r, s.browser = i(r, t), l(s.browser) ? (s.browser.name = c(s.browser), s.browser.version = d(s.browser)) : s.browser = {}, s.os = i(r, m), l(s.os) ? (s.os.name = c(s.os), s.os.version = d(s.os)) : s.os = {}, s.device = i(r, p), l(s.device) ? (s.device.name = c(s.device), s.device.version = d(s.device)) : s.device = {\n          tablet: !1,\n          family: "Other"\n        };\n        var g = {};\n        return e.regexes.mobile_browser_families.map(function (e) {\n          g[e] = !0;\n        }), e.regexes.mobile_os_families.map(function (e) {\n          g[e] = !0;\n        }), s.device.type = "Spider" === s.browser.family ? "Spider" : s.browser.tablet || s.os.tablet || s.device.tablet ? "Tablet" : g.hasOwnProperty(s.browser.family) ? "Mobile" : "Desktop", s.device.manufacturer = s.browser.man || s.os.man || s.device.man || null, n([s.browser, s.os, s.device], ["tablet", "man"]), s;\n      }, e;\n    }();\n\n     true ? ( true && module.exports && (exports = module.exports = r), exports.detect = r) : 0,  true && !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return r;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  })(window);\n}\n\n!function (t, e) {\n  var n;\n  t.pageTitleNotification = (n = {\n    currentTitle: null,\n    interval: null\n  }, {\n    on: function on(l, i) {\n      n.interval || (n.currentTitle = e.title, n.interval = t.setInterval(function () {\n        e.title = n.currentTitle === e.title ? l : n.currentTitle;\n      }, i || 1e3));\n    },\n    off: function off() {\n      t.clearInterval(n.interval), n.interval = null, e.title = n.currentTitle;\n    }\n  });\n}(window, document);\nsetupDetect();\n\nvar detectDeviceType = function detectDeviceType() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? \'Mobile\' : \'Desktop\';\n};\n\nvar details = detect.parse(navigator.userAgent);\n\nfunction uuidv4() {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, function (c) {\n    return (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n  });\n}\n\nwindow.richpanel.campaign = {};\n\nfunction microAjax(url, callbackFunction) {\n  this.bindFunction = function (caller, object) {\n    return function () {\n      return caller.apply(object, [object]);\n    };\n  };\n\n  this.stateChange = function (object) {\n    if (this.request.readyState == 4) this.callbackFunction(this.request.responseText);\n  };\n\n  this.getRequest = function (requestType, url) {\n    if (window.XDomainRequest) {\n      var appliance = new XDomainRequest();\n\n      appliance.onprogress = function () {};\n\n      appliance.ontimeout = function () {};\n\n      if (requestType == \'POST\') {\n        appliance.open(\'POST\', url, true);\n      } else {\n        appliance.open(\'GET\', url, true);\n      }\n\n      return appliance;\n    } else if (window.XMLHttpRequest) {\n      var xmlAppliance = new XMLHttpRequest();\n\n      if (requestType == \'POST\') {\n        xmlAppliance.open(\'POST\', url, true);\n        xmlAppliance.setRequestHeader(\'X-Requested-With\', \'XMLHttpRequest\');\n        xmlAppliance.setRequestHeader(\'Content-Type\', \'application/json\');\n        xmlAppliance.setRequestHeader(\'Access-Control-Allow-Origin\', \'*\');\n      } else {\n        xmlAppliance.open(\'GET\', url, true);\n      }\n\n      return xmlAppliance;\n    }\n\n    return false;\n  };\n\n  this.postBody = arguments[2] || \'\';\n  this.callbackFunction = callbackFunction;\n  this.rpApiUrlNew = url;\n  this.requestType = this.postBody !== \'\' ? \'POST\' : \'GET\';\n  this.request = this.getRequest(requestType, this.rpApiUrlNew);\n\n  if (this.request && window.XMLHttpRequest) {\n    this.request.onreadystatechange = this.bindFunction(this.stateChange, this);\n  }\n\n  if (this.request) {\n    this.request.send(this.postBody);\n  }\n}\n\nwindow.microAjax = microAjax;\n\n(function (document, undefined) {\n  var cookie = function cookie() {\n    return cookie.get.apply(cookie, arguments);\n  };\n\n  var utils = cookie.utils = {\n    isArray: Array.isArray || function (value) {\n      return Object.prototype.toString.call(value) === \'[object Array]\';\n    },\n    isPlainObject: function isPlainObject(value) {\n      return !!value && Object.prototype.toString.call(value) === \'[object Object]\';\n    },\n    toArray: function toArray(value) {\n      return Array.prototype.slice.call(value);\n    },\n    getKeys: Object.keys || function (obj) {\n      var keys = [],\n          key = \'\';\n\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) keys.push(key);\n      }\n\n      return keys;\n    },\n    encode: function encode(value) {\n      return String(value).replace(/[,;"\\\\=\\s%]/g, function (character) {\n        return encodeURIComponent(character);\n      });\n    },\n    decode: function decode(value) {\n      return decodeURIComponent(value);\n    },\n    retrieve: function retrieve(value, fallback) {\n      return value == null ? fallback : value;\n    }\n  };\n  cookie.defaults = {};\n  cookie.expiresMultiplier = 60 * 60 * 24;\n\n  cookie.set = function (key, value, options) {\n    if (utils.isPlainObject(key)) {\n      for (var k in key) {\n        if (key.hasOwnProperty(k)) this.set(k, key[k], value);\n      }\n    } else {\n      options = utils.isPlainObject(options) ? options : {\n        expires: options\n      };\n\n      var expires = options.expires !== undefined ? options.expires : this.defaults.expires || \'\',\n          expiresType = _typeof(expires);\n\n      if (expiresType === \'string\' && expires !== \'\') expires = new Date(expires);else if (expiresType === \'number\') expires = new Date(+new Date() + 1000 * this.expiresMultiplier * expires);\n      if (expires !== \'\' && \'toGMTString\' in expires) expires = \';expires=\' + expires.toGMTString();\n      var path = options.path || this.defaults.path;\n      path = path ? \';path=\' + path : \'\';\n      var domain = options.domain || this.defaults.domain;\n      domain = domain ? \';domain=\' + domain : \'\';\n      var secure = options.secure || this.defaults.secure ? \';secure\' : \'\';\n      if (options.secure === false) secure = \'\';\n      var sameSite = \'\';\n\n      if (window.rpSet3rdPartyCookie) {\n        sameSite = \';SameSite=None\';\n        secure = \';secure\';\n      }\n\n      ;\n      document.cookie = utils.encode(key) + \'=\' + utils.encode(value) + expires + path + domain + secure + sameSite;\n    }\n\n    return this;\n  };\n\n  cookie.setDefault = function (key, value, options) {\n    if (utils.isPlainObject(key)) {\n      for (var k in key) {\n        if (this.get(k) === undefined) this.set(k, key[k], value);\n      }\n\n      return cookie;\n    } else {\n      if (this.get(key) === undefined) return this.set.apply(this, arguments);\n    }\n  }, cookie.remove = function (keys) {\n    keys = utils.isArray(keys) ? keys : utils.toArray(arguments);\n\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.set(keys[i], \'\', -1);\n    }\n\n    return this;\n  };\n\n  cookie.removeSpecific = function (keys, options) {\n    if (!options) return this.remove(keys);\n    keys = utils.isArray(keys) ? keys : [keys];\n    options.expire = -1;\n\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.set(keys[i], \'\', options);\n    }\n\n    return this;\n  };\n\n  cookie.empty = function () {\n    return this.remove(utils.getKeys(this.all()));\n  };\n\n  cookie.get = function (keys, fallback) {\n    var cookies = this.all();\n\n    if (utils.isArray(keys)) {\n      var result = {};\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var value = keys[i];\n        result[value] = utils.retrieve(cookies[value], fallback);\n      }\n\n      return result;\n    } else return utils.retrieve(cookies[keys], fallback);\n  };\n\n  cookie.all = function () {\n    if (document.cookie === \'\') return {};\n    var cookies = document.cookie.split(\'; \'),\n        result = {};\n\n    for (var i = 0, l = cookies.length; i < l; i++) {\n      var item = cookies[i].split(\'=\');\n      var key = utils.decode(item.shift());\n      var value = utils.decode(item.join(\'=\'));\n      result[key] = value;\n    }\n\n    return result;\n  };\n\n  cookie.enabled = function () {\n    if (navigator.cookieEnabled) return true;\n    var ret = cookie.set(\'_\', \'_\').get(\'_\') === \'_\';\n    cookie.remove(\'_\');\n    return ret;\n  };\n\n  window.richpanelCookie = cookie;\n})(document);\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty(\'remove\')) {\n      return;\n    }\n\n    Object.defineProperty(item, \'remove\', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        if (this.parentNode === null) {\n          return;\n        }\n\n        this.parentNode.removeChild(this);\n      }\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n\nfunction StringBuffer() {\n  this.buffer = [];\n}\n\nStringBuffer.prototype.append = function append(string) {\n  this.buffer.push(string);\n  return this;\n};\n\nStringBuffer.prototype.toString = function toString() {\n  return this.buffer.join("");\n};\n\nvar Base64 = {\n  codex: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",\n  encode: function encode(input) {\n    var output = new StringBuffer();\n    var enumerator = new Utf8EncodeEnumerator(input);\n\n    while (enumerator.moveNext()) {\n      var chr1 = enumerator.current;\n      enumerator.moveNext();\n      var chr2 = enumerator.current;\n      enumerator.moveNext();\n      var chr3 = enumerator.current;\n      var enc1 = chr1 >> 2;\n      var enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n      var enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n      var enc4 = chr3 & 63;\n\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n\n      output.append(this.codex.charAt(enc1) + this.codex.charAt(enc2) + this.codex.charAt(enc3) + this.codex.charAt(enc4));\n    }\n\n    return output.toString();\n  },\n  decode: function decode(input) {\n    var output = new StringBuffer();\n    var enumerator = new Base64DecodeEnumerator(input);\n\n    while (enumerator.moveNext()) {\n      var charCode = enumerator.current;\n      if (charCode < 128) output.append(String.fromCharCode(charCode));else if (charCode > 191 && charCode < 224) {\n        enumerator.moveNext();\n        var charCode2 = enumerator.current;\n        output.append(String.fromCharCode((charCode & 31) << 6 | charCode2 & 63));\n      } else {\n        enumerator.moveNext();\n        var charCode2 = enumerator.current;\n        enumerator.moveNext();\n        var charCode3 = enumerator.current;\n        output.append(String.fromCharCode((charCode & 15) << 12 | (charCode2 & 63) << 6 | charCode3 & 63));\n      }\n    }\n\n    return output.toString();\n  }\n};\nwindow.Base64 = Base64;\n\nfunction Utf8EncodeEnumerator(input) {\n  this._input = input;\n  this._index = -1;\n  this._buffer = [];\n}\n\nUtf8EncodeEnumerator.prototype = {\n  current: Number.NaN,\n  moveNext: function moveNext() {\n    if (this._buffer.length > 0) {\n      this.current = this._buffer.shift();\n      return true;\n    } else if (this._index >= this._input.length - 1) {\n      this.current = Number.NaN;\n      return false;\n    } else {\n      var charCode = this._input.charCodeAt(++this._index);\n\n      if (charCode == 13 && this._input.charCodeAt(this._index + 1) == 10) {\n        charCode = 10;\n        this._index += 2;\n      }\n\n      if (charCode < 128) {\n        this.current = charCode;\n      } else if (charCode > 127 && charCode < 2048) {\n        this.current = charCode >> 6 | 192;\n\n        this._buffer.push(charCode & 63 | 128);\n      } else {\n        this.current = charCode >> 12 | 224;\n\n        this._buffer.push(charCode >> 6 & 63 | 128);\n\n        this._buffer.push(charCode & 63 | 128);\n      }\n\n      return true;\n    }\n  }\n};\n\nfunction Base64DecodeEnumerator(input) {\n  this._input = input;\n  this._index = -1;\n  this._buffer = [];\n}\n\nBase64DecodeEnumerator.prototype = {\n  current: 64,\n  moveNext: function moveNext() {\n    if (this._buffer.length > 0) {\n      this.current = this._buffer.shift();\n      return true;\n    } else if (this._index >= this._input.length - 1) {\n      this.current = 64;\n      return false;\n    } else {\n      var enc1 = Base64.codex.indexOf(this._input.charAt(++this._index));\n      var enc2 = Base64.codex.indexOf(this._input.charAt(++this._index));\n      var enc3 = Base64.codex.indexOf(this._input.charAt(++this._index));\n      var enc4 = Base64.codex.indexOf(this._input.charAt(++this._index));\n      var chr1 = enc1 << 2 | enc2 >> 4;\n      var chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n      var chr3 = (enc3 & 3) << 6 | enc4;\n      this.current = chr1;\n      if (enc3 != 64) this._buffer.push(chr2);\n      if (enc4 != 64) this._buffer.push(chr3);\n      return true;\n    }\n  }\n};\nwindow.richpanelCookie.expiresMultiplier = 60 * 60;\n\nwindow.richpanel.get_domain = function (url) {\n  return url.replace(\'http://\', \'\').replace(\'https://\', \'\').replace(\'www.\', \'\').split(/[/?#]/)[0];\n};\n\nvar mdn = window.richpanel.get_domain(document.location.hostname);\n\nvar qs = function (a) {\n  if (a === \'\') return {};\n  var b = {};\n\n  for (var i = 0; i < a.length; ++i) {\n    var p = a[i].split(\'=\');\n    if (p.length !== 2) continue;\n    value = decodeURIComponent(p[1].replace(/\\+/g, \' \'));\n    b[p[0]] = value;\n    key = p[0];\n\n    if (key === "utm_source" || key === "utm_name" || key === "utm_medium" || key === "utm_term" || key === "utm_content") {\n      window.richpanel.campaign[key.substr(4)] = value;\n    }\n  }\n\n  return b;\n}(window.location.search.substr(1).split(\'&\'));\n\nif (Object.keys) {\n  if (Object.keys(qs).length === 0) {\n    qs = false;\n  }\n}\n\nwindow.richpanel.generateUID = function () {\n  return uuidv4();\n}; //User ID check and get from cache or set to null\n// window.richpanel.uid = ((window.richpanelCookie.get(\'rpuid\') === undefined) || window.richpanelCookie.get(\'rpuid\') === \'\') ? null : window.richpanelCookie.get(\'rpuid\')\n\n\nfunction generateDID(isRegenerate) {\n  // Setting Domain ID for 3 Years (new Date(+new Date + 1000 * 60*60*24 * expires))\n  if (isRegenerate) {\n    window.richpanel.did = uuidv4();\n\n    if (window.Android && window.Android.updateDid && typeof window.Android.updateDid === "function") {\n      window.Android.updateDid(window.richpanel.did);\n    }\n  } else window.richpanel.did = window.richpanelCookie.get(\'rpdid\') === undefined || window.richpanelCookie.get(\'rpdid\') === \'\' ? uuidv4() : window.richpanelCookie.get(\'rpdid\');\n\n  window.richpanelCookie.set(\'rpdid\', window.richpanel.did, {\n    expires: 32554,\n    domain: mdn,\n    path: \'/\',\n    secure: false\n  });\n}\n\ngenerateDID(false);\n\nfunction generateSID(isRegenerate) {\n  // Session ID for approx 60 mins, update it again for approx 60 mins with every event or page refresh. expires = 1/60(1 minutes)\n  if (isRegenerate) window.richpanel.sid = uuidv4();else window.richpanel.sid = window.richpanelCookie.get(\'rpsid\') === undefined || window.richpanelCookie.get(\'rpsid\') === \'\' ? uuidv4() : window.richpanelCookie.get(\'rpsid\');\n  window.richpanelCookie.set(\'rpsid\', window.richpanel.sid, {\n    expires: 6,\n    domain: mdn,\n    path: \'/\',\n    secure: false\n  });\n}\n\ngenerateSID(false); // Store token in cookie\n\ntkn = window[\'appClientId\'];\n\nif (window.richpanelCookie.get(\'rptkn\') && tkn != window.richpanelCookie.get(\'rptkn\')) {\n  console.log("old appclientId", window.richpanelCookie.get(\'rptkn\'), \'new apclientId\', tkn, "refreshing the did and sid since the appCLientId has changed on this domain");\n  generateDID(true);\n  generateSID(true);\n}\n\nwindow.richpanelCookie.set(\'rptkn\', tkn, {\n  expires: 32554,\n  domain: mdn,\n  path: \'/\',\n  secure: false\n});\nwindow.richpanel.cdt = {\n  referrer: document.referrer,\n  href: document.location.href,\n  qs: qs\n};\nwindow.richpanel.debug_mode = false;\nwindow.richpanel.ignore_events = [];\n\nwindow.richpanel.track = function (event, properties, userProperties, time, eventId) {\n  data = {\n    event: event\n  };\n\n  if (properties) {\n    data[\'properties\'] = properties;\n  }\n\n  if (userProperties) {\n    data[\'userProperties\'] = userProperties;\n  }\n\n  if (time) {\n    data[\'time\'] = {\n      \'originalTimestamp\': time,\n      \'sentAt\': Date.now()\n    };\n  } else {\n    data[\'time\'] = {\n      \'sentAt\': Date.now()\n    };\n  }\n\n  if (eventId) {\n    data[\'eventId\'] = eventId;\n  }\n\n  window.richpanel.api_call(\'t\', data, "track");\n};\n\nwindow.richpanel.identify = function (userId, userProperties) {\n  if (userProperties) {\n    userProperties[\'uid\'] = userId;\n  } else {\n    userProperties = {\n      uid: userId\n    };\n  }\n\n  window.richpanel.track(\'identify\', {}, userProperties);\n};\n\nwindow.richpanel.debug = function (state) {\n  if (state === true) {\n    window.richpanel.debug_mode = true;\n  } else {\n    window.richpanel.debug_mode = false;\n  }\n};\n\nwindow.richpanel.ping = function () {\n  return true;\n};\n\nwindow.richpanel.atr = function (e, f) {\n  if (e === \'onload\') {\n    f();\n  }\n};\n\nvar richpanelBotRegexp = new RegExp([\'googlebot\', \'bingbot\', \'slurp\', \'duckduckbot\', \'spider\', \'yandexbot\', \'exabot\', \'facebot\', \'facebookexternalhit\', \'ia_archiver\'].join(\'|\'), \'i\');\nvar findIP = new Promise(function (e) {\n  var n = window,\n      c = new (n.RTCPeerConnection || n.mozRTCPeerConnection || n.webkitRTCPeerConnection)({\n    iceServers: []\n  }),\n      t = function t() {};\n\n  c.createDataChannel(""), c.createOffer(function (e) {\n    return c.setLocalDescription(e, t, t);\n  }, t), c.onicecandidate = function (n) {\n    try {\n      n.candidate.candidate.match(/([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g).forEach(e);\n    } catch (c) {}\n  };\n});\n\nfunction setSystemIP() {\n  var rpsip = window.richpanelCookie.get(\'rpsip\') === undefined || window.richpanelCookie.get(\'rpsip\') === \'\' ? null : window.richpanelCookie.get(\'rpsip\');\n\n  if (rpsip) {\n    window.richpanel.systemIp = rpsip;\n  } else {\n    findIP.then(function (ip) {\n      window.richpanelCookie.set(\'rpsip\', ip, {\n        expires: 1,\n        //1 day\n        domain: mdn,\n        path: \'/\',\n        secure: false\n      });\n    })["catch"](function (e) {});\n  }\n}\n\nsetSystemIP();\nwindow.richpanel.ip = {\n  networkIP: window[\'userIpAddress\'],\n  systemIP: window.richpanelCookie.get(\'rpsip\')\n};\nwindow.richpanel.systemIp = null;\nwindow.richpanel.location = {};\nwindow.richpanel.page = {\n  "url": document.location.href,\n  "path": document.location.pathname,\n  "referrer": document.referrer,\n  "title": document.title,\n  "qs": qs\n};\n\ntry {\n  window.richpanel.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n} catch (error) {}\n\nwindow.richpanel.userAgent = window.navigator.userAgent;\nwindow.richpanel.screen = {\n  "width": window.screen && window.screen.availWidth,\n  "height": window.screen && window.screen.availHeight,\n  "density": window.screen && window.screen.colorDepth\n};\nwindow.richpanel.device = {\n  "type": detectDeviceType(),\n  "isMobile": detectDeviceType() === \'Mobile\' ? 1 : 0\n};\nwindow.richpanel.os = {\n  "name": details.os.family,\n  "version": details.os.version\n};\nwindow.richpanel.browser = {\n  "name": details.browser.name,\n  "version": details.browser.version,\n  "family": details.browser.family,\n  "lang": window.navigator.language,\n  "cookies": navigator.cookieEnabled ? 1 : 0\n}; //Geolocation\n// function setPosition() {\n// \twindow.richpanel.location = {\n// \t\t"latitude": window.cachedPosition.coords.latitude,\n// \t\t"longitude": window.cachedPosition.coords.longitude\n// \t}\n// }\n// if (window.cachedPosition) {\n// \tsetPosition()\n// } else {\n// \twindow.navigator.geolocation.getCurrentPosition(function(position){\n// \t\twindow.cachedPosition = position\n// \t\tsetPosition()\n// \t})\n// }\n\nwindow.richpanel.logout = function () {\n  generateDID(true);\n  generateSID(true);\n};\n\nfunction isUserPropertyMatching(data) {\n  var userProperties = localStorage.getItem("userProperties");\n  var rpuid = localStorage.getItem("rpuid");\n  var rpcuid = localStorage.getItem("rpcuid");\n\n  if (userProperties == "null" || userProperties == "undefined") {\n    userProperties = null;\n  }\n\n  if (JSON.stringify(data) != userProperties || !userProperties) {\n    if (data[\'uid\']) {\n      if (data[\'uid\'] !== rpuid) {\n        // If there is no rpuid in localStorage, we\'ll simply add it, but if its there and not matching to the incoming one\n        if (rpuid && !(rpuid == "undefined") && !(rpuid == "null")) {\n          // Checking if rpuid was there before\n          generateDID(true);\n          generateSID(true);\n        }\n\n        rpuid = data[\'uid\'];\n      }\n\n      var emailOfUser = data[\'email\'] || data[\'uid\'];\n\n      if (rpcuid && emailOfUser && emailOfUser !== rpcuid) {\n        generateDID(true);\n        generateSID(true);\n        rpcuid = emailOfUser;\n        localStorage.setItem("rpcuid", rpcuid);\n      }\n\n      localStorage.setItem("userProperties", JSON.stringify(data));\n      if (rpuid) localStorage.setItem("rpuid", rpuid);\n      return false;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nwindow.richpanel.api_call = function (method, data, type) {\n  if (richpanelBotRegexp.test(navigator.userAgent)) {\n    return;\n  }\n\n  var userProperties = null;\n\n  if ("userProperties" in data) {\n    userProperties = data["userProperties"];\n\n    if (isUserPropertyMatching(data["userProperties"]) && data["event"] !== "order") {\n      data["userProperties"] = null;\n    }\n  } else {\n    localStorage.setItem("userProperties", null);\n  } // Update session timing if already present for next 30 mins, if not present generate new and set it for 30 mins\n\n\n  generateSID(false);\n  data["context"] = {}; // data["context"]["campaign"] = window.richpanel.campaign\n\n  data["context"]["device"] = window.richpanel.device;\n  data["context"]["ip"] = window.richpanel.ip;\n  data["context"]["location"] = window.richpanel.location;\n  data["context"]["os"] = window.richpanel.os;\n  data["context"]["page"] = window.richpanel.page;\n  data["context"]["screen"] = window.richpanel.screen;\n  data["context"]["browser"] = window.richpanel.browser;\n  data["context"]["timezone"] = window.richpanel.timezone;\n  data["context"]["userAgent"] = window.richpanel.userAgent;\n  data[\'appClientId\'] = window[\'appClientId\'];\n  data[\'did\'] = window.richpanel.did; // data[\'uid\'] = window.richpanel.uid\n\n  data[\'sid\'] = window.richpanel.sid;\n\n  if (!data[\'time\']) {\n    data[\'time\'] = {\n      "sentAt": new Date().getTime()\n    };\n  }\n\n  data[\'version\'] = window["richpanelVersion"];\n\n  if (!data[\'eventId\']) {\n    data[\'eventId\'] = uuidv4();\n  } // Skipping page_view event without userProperties\n\n\n  if (data.event === \'page_view\' && !data["userProperties"]) {\n    return;\n  } // console.log(data)\n\n\n  var djs = JSON.stringify(data);\n\n  if (window.richpanel.debug_mode === false) {\n    var encoded = window.Base64.encode(djs);\n    window.microAjax(window.richpanel_api_url + \'/\' + method, function () {}, JSON.stringify({\n      h: encoded // event_type: type\n\n    }));\n  } // setupRichpanelMessengerConfiguration(userProperties, data[\'did\'], data[\'appClientId\'])\n\n};\n\nvar mtrq = window.richpanel.q === undefined ? window.richpanel.queue : window.richpanel.q;\n\nfor (var i = 0; mtrq.length > i; i++) {\n  var qItem = mtrq[i];\n  var method = qItem[0];\n  qItem.shift();\n  window.richpanel[method].apply(undefined, qItem);\n} //changes for receiving woocommerce events\n\n/* checking split */\n\n\nvar wc_location = window.location ? window.location : null;\nvar wc_content = window.wp_rp_datalayer ? window.wp_rp_datalayer : null;\nvar wc_product = wc_content && wc_content.product ? wc_content.product : null;\n\n_path = function _path() {\n  return wc_location.pathname;\n};\n\n_splitData = function _splitData(input) {\n  var splittedData = _path().match(input);\n\n  return splittedData ? splittedData[1] : null;\n};\n\n_cookieData = function _cookieData(name) {\n  var pairs = document.cookie.split("; "),\n      count = pairs.length,\n      parts,\n      cookieObject = {};\n\n  while (count--) {\n    parts = pairs[count].split("=");\n    cookieObject[parts[0]] = parts[1];\n  }\n\n  return cookieObject;\n};\n\n_cookiesObject = _cookieData();\n\n_userProperties = function _userProperties() {\n  var props = {};\n\n  if (_cookiesObject[\'rp_email\']) {\n    props = {\n      email: _cookiesObject[\'rp_email\'],\n      uid: _cookiesObject[\'rp_email\']\n    };\n\n    if (_cookiesObject[\'rp_firstName\']) {\n      props.firstName = _cookiesObject[\'rp_firstName\'];\n    }\n\n    if (_cookiesObject[\'rp_lastName\']) {\n      props.lastName = _cookiesObject[\'rp_lastName\'];\n    }\n  }\n\n  if (props && props.email) {\n    return props;\n  }\n\n  return null;\n};\n\nwc_run = function wc_run() {\n  /* calling functions */\n  if (wc_content) {\n    if (wc_content.product) {\n      richpanelWoocommerce.viewProduct();\n    } else {\n      richpanelWoocommerce.viewProductCategory();\n    }\n  }\n};\n\nrichpanelWoocommerce = {\n  /* view category page page */\n  viewProductCategory: function viewProductCategory() {\n    var page = wc_content ? wc_content.page_type : "";\n\n    if (page === \'category\') {\n      var name = _splitData(/\\/product-category\\/([a-z0-9_-]+)/);\n\n      var properties = {\n        pageTitle: document.title,\n        url: wc_location.href,\n        categoryName: name\n      };\n      window.richpanel.track(\'view_category\', properties, _userProperties(), Date.now());\n    }\n  },\n\n  /* view product page */\n  viewProduct: function viewProduct() {\n    var page = wc_content && wc_content.product ? "product" : "";\n\n    if (page === \'product\') {\n      if (wc_product) {\n        var pId = wc_product.id;\n        var price = wc_product.price;\n        var name = wc_product.name;\n        var sku = wc_product.sku;\n        var imageUrl = wc_product.image_url[0];\n        var url = wc_product.url;\n        var categories = wc_product.categories;\n        var properties = {\n          productName: name,\n          url: url,\n          id: "" + pId\n        };\n\n        if (price !== null) {\n          properties.price = price;\n        }\n\n        if (sku !== null) {\n          properties.sku = sku;\n        }\n\n        if (imageUrl !== null) {\n          properties.imageUrl = imageUrl;\n        }\n\n        if (categories !== null) {\n          properties.products = categories;\n        }\n\n        window.richpanel.track(\'view_product\', properties, _userProperties(), Date.now());\n      }\n    }\n  }\n}; //changes for receiving woocommerce events ends here\n\nfunction loadMicroApp() {\n  function loadScript(src) {\n    var s = document.createElement(\'script\');\n    s.type = \'text/javascript\';\n    s.async = true;\n    s.src = src;\n    var x = document.getElementsByTagName(\'script\')[0];\n    x.parentNode.insertBefore(s, x);\n  }\n\n  ;\n  loadScript("https://cdn.richpanel.com/js/vendor~micro-app.js");\n  loadScript("https://cdn.richpanel.com/js/micro-app.js"); //changes for receiving woocommerce events\n\n  if (typeof wc_cart_fragments_params !== \'undefined\') {\n    wc_run();\n  }\n}\n\nloadMicroApp();\n\n//# sourceURL=webpack://tracking-script-2/./src/index.js?')}},__webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e])return __webpack_module_cache__[e].exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__("./src/index.js")})();